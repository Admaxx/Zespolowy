/* 
 * SimpleCalc
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        
        /// <summary>
        /// Test ABOpGet
        /// </summary>
        [Test]
        public void ABOpGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string a = null;
            //string b = null;
            //string op = null;
            //var response = instance.ABOpGet(a, b, op);
            //Assert.IsInstanceOf<Result> (response, "response is Result");
        }
        
        /// <summary>
        /// Test RootGet
        /// </summary>
        [Test]
        public void RootGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string op = null;
            //string a = null;
            //string b = null;
            //var response = instance.RootGet(op, a, b);
            //Assert.IsInstanceOf<Result> (response, "response is Result");
        }
        
        /// <summary>
        /// Test RootPost
        /// </summary>
        [Test]
        public void RootPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Input input = null;
            //var response = instance.RootPost(input);
            //Assert.IsInstanceOf<Result> (response, "response is Result");
        }
        
    }

}
